version: '2'
services:
  pyspark-jupyter:
    image: easewithdata/pyspark-jupyter-lab
    container_name: pyspark-jupyter-lab
    ports:
      - 8888:8888
      - 4040:4040
    environment:
      JUPYTER_PORT: 8888
      SPARK_UI_PORT: 4040
    volumes:
      - spark_data:/data:rw
    depends_on:
      - kafka
      - cassandra
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    volumes:
      - spark_data:/data:rw
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "raw:1:1"

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - 9042:9042
    environment:
      - CASSANDRA_CLUSTER_NAME=KafkaCassandraCluster
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RAC1

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: kafka_user
      POSTGRES_PASSWORD: kafka_pass
      POSTGRES_DB: kafka_db

volumes:
  spark_data:
